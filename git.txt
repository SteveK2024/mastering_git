
To add your name to your the changes you make, 
bash:
git config --global user.name 'Steve'

o add your email to your the changes you make, 
bash:
git config --global user.email 'skyeremehsw@sph.uhas.edu.gh'

To start tracking your project folders and files, 
bash:
git init

git init will by default push your work on master, not main.

To change to main in future projects, 
bash:
git config --global init.defaultBranch main

drop in new project and see it stored in main, not master.

To disconnect your project from git, 
bash:
rm -rf .git


git add ./
will add all other files without doing so individually.

git commit -m 'Add hello and test files'

git log
results:
$ git log
commit 5b691edb19c1529df06d8de8be34e96dde82726a (HEAD -> main)
Author: Steve <skyeremehsw@sph.uhas.edu.gh>
Date:   Wed Nov 13 12:39:27 2024 +0000

    Add readme.md file


git checkout 5b691edb19c1529df06d8de8be34e96dde82726a will show you what was changed at Wed Nov 13 12:39:27 2024 +0000 by Author: Steve <skyeremehsw@sph.uhas.edu.gh>

results below:
Admin@DESKTOP-3HTS0AA MINGW64 ~/Desktop/mastering-git (main)       
$ git checkout 5b691edb19c1529df06d8de8be34e96dde82726a
Note: switching to '5b691edb19c1529df06d8de8be34e96dde82726a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example: 

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 5b691ed Add readme.md file

You are in 'detached HEAD' state means that, the main without any update.

no wonder the dir is now:
Admin@DESKTOP-3HTS0AA MINGW64 ~/Desktop/mastering-git ((5b691ed...))

To get back to the main with updates, use 

checkout main 


results
$ git checkout main
Switched to branch 'main'

Admin@DESKTOP-3HTS0AA MINGW64 ~/Desktop/mastering-git (main)       
$

if you still want to discard any changes in the detached state, bash 

git checkout -f main


/////////////////////////////****/////////////

Now going to github. 
create a new repository on at github, and copy link as below...
https://github.com/SteveK2024/mastering_git.git



We make sure our work is on the main branch.

bash:
git branch -M main


To connect the current local repository to github, bash this in vs terminal:

git remote add origin https://github.com/SteveK2024/mastering_git.git

result is Admin@DESKTOP-3HTS0AA MINGW64 ~/Desktop/mastering-git (main)   

Next, bash:

git push -u origin main

Results:
$ git push -u origin main
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 234 bytes | 78.00 KiB/s, done.        
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)      
To https://github.com/SteveK2024/mastering_git.git
 * [new branch]      main -> main
branch 'main' set up to track 'origin/main'.

Admin@DESKTOP-3HTS0AA MINGW64 ~/Desktop/mastering-git (main)       
$

In short, the main things to look for is 


git add .
git commit -m "Describe your changes"
git push

